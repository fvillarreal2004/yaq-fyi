{
    "config": {
        "identifiers": {
            "default": {},
            "doc": "Position identifiers",
            "type": {
                "type": "map",
                "values": "double"
            }
        }
    },
    "doc": "The is-discrete trait is used for hardware that has a countable number of discrete positions, each with a unique identifier.\nThis trait requires the has-position trait, and discrete hardware must support all of the 'normal' methods such as set_position and get_destination.\nHardware with this trait simply offer an additional identifier mapping on top of the existing position and destination behavior.\nA convinience method 'set_identifier' allows clients to provide identifiers instead of raw positions, if desired.\n",
    "messages": {
        "get_destination": {
            "doc": "Get current daemon destination.",
            "origin": "has-position",
            "response": "double"
        },
        "get_identifier": {
            "doc": "Get current identifier string. Current identifier may be None.",
            "response": [
                "null",
                "string"
            ]
        },
        "get_position": {
            "doc": "Get current daemon position.",
            "origin": "has-position",
            "response": "double"
        },
        "get_position_identifiers": {
            "doc": "Get position identifiers. Identifiers may not change at runtime.",
            "response": {
                "type": "map",
                "values": "double"
            }
        },
        "get_units": {
            "doc": "Get units of daemon. These units apply to the position and destination fields.",
            "origin": "has-position",
            "response": [
                "null",
                "string"
            ]
        },
        "set_identifier": {
            "doc": "Set using an identifier. Returns new destination.",
            "request": [
                {
                    "name": "identifier",
                    "type": "string"
                }
            ],
            "response": "double"
        },
        "set_position": {
            "doc": "Give the daemon a new destination, and begin motion towards that destination.",
            "origin": "has-position",
            "request": [
                {
                    "name": "position",
                    "type": "double"
                }
            ]
        },
        "set_relative": {
            "doc": "Give the daemon a new destination relative to its current position. Daemon will immediately begin motion towards new destination. Returns new destination.",
            "origin": "has-position",
            "request": [
                {
                    "name": "distance",
                    "type": "double"
                }
            ],
            "response": "double"
        }
    },
    "requires": [
        "has-position"
    ],
    "state": {
        "destination": {
            "default": NaN,
            "origin": "has-position",
            "type": "double"
        },
        "position": {
            "default": NaN,
            "origin": "has-position",
            "type": "double"
        },
        "position_identifier": {
            "default": "__null__",
            "doc": "Current position identifier.",
            "type": [
                "null",
                "string"
            ]
        }
    },
    "trait": "is-discrete"
}
